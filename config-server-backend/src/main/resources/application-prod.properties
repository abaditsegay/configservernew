# Production Configuration
server.port=8888

# Application Configuration
spring.application.name=config-server
spring.profiles.active=jdbc,prod

# Spring Cloud Config Server JDBC Configuration
spring.cloud.config.server.jdbc.sql=SELECT prop_key, prop_value FROM PROPERTIES WHERE application=? AND profile=? AND label=?
spring.cloud.config.server.jdbc.order=1
spring.cloud.config.server.bootstrap=false

# Production Encryption Configuration - Environment Variables
encrypt.key-store.location=file:${CONFIG_SERVER_KEYSTORE_PATH:/etc/config-server/keystore/config-server-prod.jks}
encrypt.key-store.password=${KEYSTORE_PASSWORD}
encrypt.key-store.alias=${KEY_ALIAS:config-server-key-prod}
encrypt.key-store.secret=${KEY_PASSWORD}

# Production Database Configuration (PostgreSQL)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://config-db:5432/configserver}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME:configserver}
spring.datasource.password=${DATABASE_PASSWORD}

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD}
spring.security.user.roles=ADMIN

# SSL/TLS Configuration
server.ssl.enabled=true
server.ssl.key-store=${SSL_KEYSTORE_PATH:/etc/config-server/ssl/server.p12}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=config-server-ssl

# Force HTTPS
server.ssl.client-auth=need
security.require-ssl=true

# Management Endpoints - Restricted in Production
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.endpoints.web.base-path=/actuator
management.server.port=8889
management.server.ssl.enabled=true

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Audit Logging
audit.enabled=true
audit.log-level=INFO
logging.level.org.springframework.cloud.config.server=INFO
logging.level.org.springframework.security=WARN

# Metrics and Monitoring
management.metrics.enable.spring.cloud.config=true
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.export.prometheus.enabled=true

# Rate Limiting
spring.cloud.gateway.filter.rate-limit.enabled=true
spring.cloud.gateway.filter.rate-limit.replenish-rate=10
spring.cloud.gateway.filter.rate-limit.burst-capacity=20

# Disable H2 Console in Production
spring.h2.console.enabled=false

# Logging Configuration
logging.level.org.springframework.cloud.config=WARN
logging.level.org.springframework.security=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=/var/log/config-server/application.log
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.total-size-cap=1GB
logging.logback.rollingpolicy.max-history=30
